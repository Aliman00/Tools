#############################################################################
# Makefile for building: WorldSpawnerTool
# Generated by qmake (2.01a) (Qt 4.6.2) on: lun 22. ago 19:54:42 2011
# Project:  WorldSpawnerTool.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -Wno-multichar -Wno-unused -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I'e:/Qt/4.6.2/include/QtCore' -I'e:/Qt/4.6.2/include/QtGui' -I'e:/Qt/4.6.2/include/QtSql' -I'e:/Qt/4.6.2/include' -I'/opt/local/include' -I'e:/Qt/4.6.2/include/ActiveQt' -I'release' -I'.' -I'e:/Qt/4.6.2/mkspecs/win32-g++'
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L'e:/Qt/4.6.2/lib' -lmingw32 -lqtmain -L/opt/local/lib -Ld:/workspace/SWGQTemplateLib/SWGQTemplateLib-build-desktop/debug -Ld:/workspace/QTIffStream/QTIffStream-build-desktop/debug -Ld:/workspace/QTTreLib/QTTreLib-build-desktop/debug -llua -lQtSql4 -lQtGui4 -lQtCore4 
QMAKE         = e:/qt/4.6.2/bin/qmake.exe
IDC           = e:/Qt/4.6.2/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = cp
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = rm
DEL_DIR       = rmdir
MOVE          = mv
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = insertwindow.cpp \
		dynamicspawnarea.cpp \
		nobuildzone.cpp \
		cityregion.cpp \
		console.cpp \
		databaseconnection.cpp \
		main.cpp \
		mainwindow.cpp \
		region.cpp \
		worldmap.cpp \
		settings.cpp \
		creaturemanager.cpp \
		CreatureObject.cpp \
		planetspawnregion.cpp \
		preorcreaturemanager.cpp \
		LuaParser.cpp \
		lairtool.cpp \
		creatureluamanager.cpp \
		spawnluamanager.cpp \
		spawn.cpp \
		staticspawn.cpp \
		staticspawntableitem.cpp \
		planetselection.cpp \
		commands.cpp release/moc_insertwindow.cpp \
		release/moc_console.cpp \
		release/moc_databaseconnection.cpp \
		release/moc_mainwindow.cpp \
		release/moc_worldmap.cpp \
		release/moc_settings.cpp \
		release/moc_creaturemanager.cpp \
		release/moc_preorcreaturemanager.cpp \
		release/moc_lairtool.cpp \
		release/moc_planetselection.cpp \
		release/qrc_Resources.cpp
OBJECTS       = release/insertwindow.o \
		release/dynamicspawnarea.o \
		release/nobuildzone.o \
		release/cityregion.o \
		release/console.o \
		release/databaseconnection.o \
		release/main.o \
		release/mainwindow.o \
		release/region.o \
		release/worldmap.o \
		release/settings.o \
		release/creaturemanager.o \
		release/CreatureObject.o \
		release/planetspawnregion.o \
		release/preorcreaturemanager.o \
		release/LuaParser.o \
		release/lairtool.o \
		release/creatureluamanager.o \
		release/spawnluamanager.o \
		release/spawn.o \
		release/staticspawn.o \
		release/staticspawntableitem.o \
		release/planetselection.o \
		release/commands.o \
		release/moc_insertwindow.o \
		release/moc_console.o \
		release/moc_databaseconnection.o \
		release/moc_mainwindow.o \
		release/moc_worldmap.o \
		release/moc_settings.o \
		release/moc_creaturemanager.o \
		release/moc_preorcreaturemanager.o \
		release/moc_lairtool.o \
		release/moc_planetselection.o \
		release/qrc_Resources.o
DIST          = 
QMAKE_TARGET  = WorldSpawnerTool
DESTDIR        = release/ #avoid trailing-slash linebreak
TARGET         = WorldSpawnerTool.exe
DESTDIR_TARGET = release/WorldSpawnerTool.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_insertwindow.h ui_console.h ui_connect.h ui_mainwindow.h ui_settings.h ui_creaturemanager.h ui_preorcreaturemanager.h ui_lairtool.h ui_planetselection.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.WorldSpawnerTool.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec e:/Qt/4.6.2/mkspecs/win32-g++ -win32 -o Makefile.Release WorldSpawnerTool.pro

dist:
	$(ZIP) WorldSpawnerTool.zip $(SOURCES) $(DIST) WorldSpawnerTool.pro e:/Qt/4.6.2/mkspecs/qconfig.pri e:/Qt/4.6.2/mkspecs/features/qt_functions.prf e:/Qt/4.6.2/mkspecs/features/qt_config.prf e:/Qt/4.6.2/mkspecs/features/exclusive_builds.prf e:/Qt/4.6.2/mkspecs/features/default_pre.prf e:/Qt/4.6.2/mkspecs/features/win32/default_pre.prf e:/Qt/4.6.2/mkspecs/features/release.prf e:/Qt/4.6.2/mkspecs/features/debug_and_release.prf e:/Qt/4.6.2/mkspecs/features/default_post.prf e:/Qt/4.6.2/mkspecs/features/win32/default_post.prf e:/Qt/4.6.2/mkspecs/features/build_pass.prf e:/Qt/4.6.2/mkspecs/features/win32/rtti.prf e:/Qt/4.6.2/mkspecs/features/win32/exceptions.prf e:/Qt/4.6.2/mkspecs/features/win32/stl.prf e:/Qt/4.6.2/mkspecs/features/shared.prf e:/Qt/4.6.2/mkspecs/features/warn_on.prf e:/Qt/4.6.2/mkspecs/features/qt.prf e:/Qt/4.6.2/mkspecs/features/win32/thread.prf e:/Qt/4.6.2/mkspecs/features/moc.prf e:/Qt/4.6.2/mkspecs/features/win32/windows.prf e:/Qt/4.6.2/mkspecs/features/resources.prf e:/Qt/4.6.2/mkspecs/features/uic.prf e:/Qt/4.6.2/mkspecs/features/yacc.prf e:/Qt/4.6.2/mkspecs/features/lex.prf e:/Qt/4.6.2/mkspecs/features/incredibuild_xge.prf e:/Qt/4.6.2/mkspecs/features/include_source_dir.prf e:\Qt\4.6.2\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release/insertwindow.o release/dynamicspawnarea.o release/nobuildzone.o release/cityregion.o release/console.o release/databaseconnection.o release/main.o release/mainwindow.o release/region.o release/worldmap.o release/settings.o release/creaturemanager.o release/CreatureObject.o release/planetspawnregion.o release/preorcreaturemanager.o release/LuaParser.o release/lairtool.o release/creatureluamanager.o release/spawnluamanager.o release/spawn.o release/staticspawn.o release/staticspawntableitem.o release/planetselection.o release/commands.o release/moc_insertwindow.o release/moc_console.o release/moc_databaseconnection.o release/moc_mainwindow.o release/moc_worldmap.o release/moc_settings.o release/moc_creaturemanager.o release/moc_preorcreaturemanager.o release/moc_lairtool.o release/moc_planetselection.o release/qrc_Resources.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_insertwindow.cpp release/moc_console.cpp release/moc_databaseconnection.cpp release/moc_mainwindow.cpp release/moc_worldmap.cpp release/moc_settings.cpp release/moc_creaturemanager.cpp release/moc_preorcreaturemanager.cpp release/moc_lairtool.cpp release/moc_planetselection.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_insertwindow.cpp release/moc_console.cpp release/moc_databaseconnection.cpp release/moc_mainwindow.cpp release/moc_worldmap.cpp release/moc_settings.cpp release/moc_creaturemanager.cpp release/moc_preorcreaturemanager.cpp release/moc_lairtool.cpp release/moc_planetselection.cpp
release/moc_insertwindow.cpp: ui_insertwindow.h \
		insertwindow.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 insertwindow.h -o release/moc_insertwindow.cpp

release/moc_console.cpp: ui_console.h \
		console.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 console.h -o release/moc_console.cpp

release/moc_databaseconnection.cpp: ui_connect.h \
		databaseconnection.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 databaseconnection.h -o release/moc_databaseconnection.cpp

release/moc_mainwindow.cpp: mainwindow.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o release/moc_mainwindow.cpp

release/moc_worldmap.cpp: worldmap.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 worldmap.h -o release/moc_worldmap.cpp

release/moc_settings.cpp: ApplicationSettings.h \
		mainwindow.h \
		settings.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 settings.h -o release/moc_settings.cpp

release/moc_creaturemanager.cpp: creaturemanager.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 creaturemanager.h -o release/moc_creaturemanager.cpp

release/moc_preorcreaturemanager.cpp: LuaParser.h \
		preorcreaturemanager.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 preorcreaturemanager.h -o release/moc_preorcreaturemanager.cpp

release/moc_lairtool.cpp: lairtool.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 lairtool.h -o release/moc_lairtool.cpp

release/moc_planetselection.cpp: planetselection.h
	E:\Qt\4.6.2\bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 planetselection.h -o release/moc_planetselection.cpp

compiler_rcc_make_all: release/qrc_Resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release/qrc_Resources.cpp
release/qrc_Resources.cpp: Resources.qrc \
		ui_map_talus.jpg \
		ui_map_naboo.jpg \
		ui_map_lok.jpg \
		ui_map_tatooine.jpg \
		ui_map_dantooine.jpg \
		ui_map_corellia.jpg \
		ui_map_yavin4.jpg \
		ui_map_rori.jpg \
		ui_map_dathomir.jpg \
		ui_map_endor.jpg
	e:/Qt/4.6.2/bin/rcc.exe -name Resources Resources.qrc -o release/qrc_Resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_insertwindow.h ui_console.h ui_connect.h ui_mainwindow.h ui_settings.h ui_creaturemanager.h ui_preorcreaturemanager.h ui_lairtool.h ui_planetselection.h
compiler_uic_clean:
	-$(DEL_FILE) ui_insertwindow.h ui_console.h ui_connect.h ui_mainwindow.h ui_settings.h ui_creaturemanager.h ui_preorcreaturemanager.h ui_lairtool.h ui_planetselection.h
ui_insertwindow.h: insertwindow.ui
	e:/Qt/4.6.2/bin/uic.exe insertwindow.ui -o ui_insertwindow.h

ui_console.h: console.ui
	e:/Qt/4.6.2/bin/uic.exe console.ui -o ui_console.h

ui_connect.h: connect.ui
	e:/Qt/4.6.2/bin/uic.exe connect.ui -o ui_connect.h

ui_mainwindow.h: mainwindow.ui
	e:/Qt/4.6.2/bin/uic.exe mainwindow.ui -o ui_mainwindow.h

ui_settings.h: settings.ui
	e:/Qt/4.6.2/bin/uic.exe settings.ui -o ui_settings.h

ui_creaturemanager.h: creaturemanager.ui
	e:/Qt/4.6.2/bin/uic.exe creaturemanager.ui -o ui_creaturemanager.h

ui_preorcreaturemanager.h: preorcreaturemanager.ui
	e:/Qt/4.6.2/bin/uic.exe preorcreaturemanager.ui -o ui_preorcreaturemanager.h

ui_lairtool.h: lairtool.ui
	e:/Qt/4.6.2/bin/uic.exe lairtool.ui -o ui_lairtool.h

ui_planetselection.h: planetselection.ui
	e:/Qt/4.6.2/bin/uic.exe planetselection.ui -o ui_planetselection.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 



####### Compile

release/insertwindow.o: insertwindow.cpp insertwindow.h \
		ui_insertwindow.h \
		mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/insertwindow.o insertwindow.cpp

release/dynamicspawnarea.o: dynamicspawnarea.cpp dynamicspawnarea.h \
		region.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/dynamicspawnarea.o dynamicspawnarea.cpp

release/nobuildzone.o: nobuildzone.cpp nobuildzone.h \
		region.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/nobuildzone.o nobuildzone.cpp

release/cityregion.o: cityregion.cpp cityregion.h \
		region.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/cityregion.o cityregion.cpp

release/console.o: console.cpp console.h \
		ui_console.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/console.o console.cpp

release/databaseconnection.o: databaseconnection.cpp databaseconnection.h \
		ui_connect.h \
		mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/databaseconnection.o databaseconnection.cpp

release/main.o: main.cpp mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/mainwindow.o: mainwindow.cpp mainwindow.h \
		ui_mainwindow.h \
		worldmap.h \
		databaseconnection.h \
		ui_connect.h \
		console.h \
		ui_console.h \
		insertwindow.h \
		ui_insertwindow.h \
		settings.h \
		ApplicationSettings.h \
		creaturemanager.h \
		planetspawnregion.h \
		region.h \
		spawn.h \
		creatureluamanager.h \
		LuaParser.h \
		spawnluamanager.h \
		preorcreaturemanager.h \
		staticspawn.h \
		staticspawntableitem.h \
		planetselection.h \
		commands.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/mainwindow.o mainwindow.cpp

release/region.o: region.cpp region.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/region.o region.cpp

release/worldmap.o: worldmap.cpp worldmap.h \
		region.h \
		mainwindow.h \
		databaseconnection.h \
		ui_connect.h \
		cityregion.h \
		nobuildzone.h \
		planetspawnregion.h \
		spawn.h \
		staticspawn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/worldmap.o worldmap.cpp

release/settings.o: settings.cpp settings.h \
		ApplicationSettings.h \
		mainwindow.h \
		ui_settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/settings.o settings.cpp

release/creaturemanager.o: creaturemanager.cpp creaturemanager.h \
		ui_creaturemanager.h \
		mainwindow.h \
		settings.h \
		ApplicationSettings.h \
		CreatureObject.h \
		creatureluamanager.h \
		LuaParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/creaturemanager.o creaturemanager.cpp

release/CreatureObject.o: CreatureObject.cpp CreatureObject.h \
		creatureluamanager.h \
		LuaParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CreatureObject.o CreatureObject.cpp

release/planetspawnregion.o: planetspawnregion.cpp planetspawnregion.h \
		region.h \
		spawn.h \
		mainwindow.h \
		worldmap.h \
		commands.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/planetspawnregion.o planetspawnregion.cpp

release/preorcreaturemanager.o: preorcreaturemanager.cpp preorcreaturemanager.h \
		LuaParser.h \
		ui_preorcreaturemanager.h \
		mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/preorcreaturemanager.o preorcreaturemanager.cpp

release/LuaParser.o: LuaParser.cpp LuaParser.h \
		mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/LuaParser.o LuaParser.cpp

release/lairtool.o: lairtool.cpp lairtool.h \
		ui_lairtool.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/lairtool.o lairtool.cpp

release/creatureluamanager.o: creatureluamanager.cpp creatureluamanager.h \
		LuaParser.h \
		CreatureObject.h \
		utils.h \
		mainwindow.h \
		creaturemanager.h \
		settings.h \
		ApplicationSettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/creatureluamanager.o creatureluamanager.cpp

release/spawnluamanager.o: spawnluamanager.cpp spawnluamanager.h \
		LuaParser.h \
		planetspawnregion.h \
		region.h \
		spawn.h \
		staticspawn.h \
		mainwindow.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/spawnluamanager.o spawnluamanager.cpp

release/spawn.o: spawn.cpp spawn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/spawn.o spawn.cpp

release/staticspawn.o: staticspawn.cpp staticspawn.h \
		spawn.h \
		mainwindow.h \
		worldmap.h \
		commands.h \
		utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/staticspawn.o staticspawn.cpp

release/staticspawntableitem.o: staticspawntableitem.cpp staticspawntableitem.h \
		staticspawn.h \
		spawn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/staticspawntableitem.o staticspawntableitem.cpp

release/planetselection.o: planetselection.cpp planetselection.h \
		ui_planetselection.h \
		mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/planetselection.o planetselection.cpp

release/commands.o: commands.cpp commands.h \
		utils.h \
		mainwindow.h \
		staticspawn.h \
		spawn.h \
		worldmap.h \
		planetspawnregion.h \
		region.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/commands.o commands.cpp

release/moc_insertwindow.o: release/moc_insertwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_insertwindow.o release/moc_insertwindow.cpp

release/moc_console.o: release/moc_console.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_console.o release/moc_console.cpp

release/moc_databaseconnection.o: release/moc_databaseconnection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_databaseconnection.o release/moc_databaseconnection.cpp

release/moc_mainwindow.o: release/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_mainwindow.o release/moc_mainwindow.cpp

release/moc_worldmap.o: release/moc_worldmap.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_worldmap.o release/moc_worldmap.cpp

release/moc_settings.o: release/moc_settings.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_settings.o release/moc_settings.cpp

release/moc_creaturemanager.o: release/moc_creaturemanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_creaturemanager.o release/moc_creaturemanager.cpp

release/moc_preorcreaturemanager.o: release/moc_preorcreaturemanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_preorcreaturemanager.o release/moc_preorcreaturemanager.cpp

release/moc_lairtool.o: release/moc_lairtool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_lairtool.o release/moc_lairtool.cpp

release/moc_planetselection.o: release/moc_planetselection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_planetselection.o release/moc_planetselection.cpp

release/qrc_Resources.o: release/qrc_Resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/qrc_Resources.o release/qrc_Resources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

